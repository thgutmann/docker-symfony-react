version: '3.8'

services:
  database:
    container_name: db
    image: mysql:8.0
    restart: on-failure
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: api
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    ports:
      - '4306:3306'
    volumes:
      - ./mysql-data:/var/lib/mysql
    networks:
      - app_network
  php:
    container_name: php
    build:
      context: ./docker/php
    restart: on-failure
    ports:
      - '9000:9000'
    volumes:
      - ./api:/var/www/api:delegated
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini:ro
    depends_on:
      - database
    networks:
      - app_network
  nginx:
    container_name: nginx
    build:
      context: ./docker/nginx
    restart: on-failure
    ports:
      - '8080:80'
    volumes:
      - ./api:/var/www/api:delegated
      - ./var/logs/nginx/:/var/log/nginx:delegated
      - ./docker/nginx/api.conf:/etc/nginx/conf.d/api.conf:delegated
    depends_on:
      - php
      - database
    networks:
      - app_network
  ui:
    container_name: ui
    build: ./ui
    restart: on-failure
    # below line starts the project
    command: "npm start"
    depends_on:
      - php
    networks:
      - app_network
    volumes:
      # this will mount the ui folder which contains the code to the docker container
      - ${PWD}/ui:/var/www/ui:delegated
      # this will mount the node_modules folder for faster performance
      - nodemodules:/var/www/ui/node_modules
    ports:
      - "3000:3000"

networks:
  app_network:
    driver: bridge

# volumes
volumes:
  nodemodules: {}
